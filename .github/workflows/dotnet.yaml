name: SampleExport

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
  create:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: check format
      run: dotnet format --severity error --verify-no-changes ./SampleExchangeApi.sln

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Install dependencies
      run: dotnet restore SampleExchangeApi.sln
    - name: Build
      run: dotnet build --configuration Release --no-restore SampleExchangeApi.sln
    - name: Test
      run: dotnet test --no-restore --verbosity normal SampleExchangeApi.sln

    - name: Publish
      run: dotnet publish -v minimal -c Release --no-restore -o ./artifacts ./src/SampleExchangeApi.Console/SampleExchangeApi.Console.csproj
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: ./artifacts/*

  build-image:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: artifacts
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/gdatasoftwareag/mse
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${VERSION}-${GITHUB_SHA::8}"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Login to Github Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: ./artifacts
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
